// Generated by CoffeeScript 1.7.1
var FS, Module, shiori;

self.importScripts("node_modules/ikagaka.nar.js/node_modules/encoding-japanese/encoding.js");

self.importScripts("node_modules/shiorijk/lib/shiorijk.js");

self.importScripts("vender/kawari.so.min.js");

self.importScripts("vender/kawarishiori.js");

shiori = new KawariShiori();

Module = shiori.Module;

FS = shiori.FS;

self.onmessage = function(_arg) {
  var data, directory, event, request, response, _ref;
  _ref = _arg.data, event = _ref.event, data = _ref.data;
  switch (event) {
    case "load":
      directory = data;
      Object.keys(directory).forEach(function(filepath) {
        if (/\/$/.test(filepath)) {
          return FS.mkdir("/home/web_user/" + filepath.replace(/\/$/, ""));
        } else {
          FS.writeFile("/home/web_user/" + filepath, directory[filepath], {
            encoding: 'binary'
          });
          return console.log("/home/web_user/" + filepath);
        }
      });
      FS.chdir('/home/web_user');
      console.log(shiori.load("/home/web_user/kawarirc.kis"));
      return self.postMessage({
        "event": "loaded",
        "error": null
      });
    case "request":
      request = data;
      console.log(request);
      response = shiori.request(request);
      console.log(response);
      return self.postMessage({
        event: "response",
        error: null,
        data: response
      });
    case "unload":
      console.log(shiori.unload());
      return self.postMessage({
        event: "unloaded",
        error: null
      });
    default:
      throw new Error(event + " event not support");
  }
};
